meta {
  name: DELETE /api/v1/chatrooms/{id} - Delete Chatroom (Owner)
  type: http
  seq: 106
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/{{chatroomId}}
  body: none
  auth: bearer
}

auth:bearer {
  token: {{ownerAccessToken}}
}

tests {
  test("Status code is 204 for successful chatroom deletion", function() {
    expect(res.getStatus()).to.equal(204);
  });
  
  test("Response body is empty", function() {
    expect(res.getBody()).to.be.empty;
  });
  
  test("Response time is under 1 second", function() {
    expect(res.getResponseTime()).to.be.lessThan(1000);
  });
}

---

meta {
  name: DELETE /api/v1/chatrooms/{id} - Delete Chatroom (Admin)
  type: http
  seq: 107
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/{{anotherChatroomId}}
  body: none
  auth: bearer
}

auth:bearer {
  token: {{adminAccessToken}}
}

tests {
  test("Status code is 204 for admin deletion", function() {
    expect(res.getStatus()).to.equal(204);
  });
  
  test("Response body is empty", function() {
    expect(res.getBody()).to.be.empty;
  });
  
  test("Response time is under 1 second", function() {
    expect(res.getResponseTime()).to.be.lessThan(1000);
  });
}

---

meta {
  name: DELETE /api/v1/chatrooms/{id} - Non-existent Chatroom
  type: http
  seq: 108
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/00000000-0000-0000-0000-000000000000
  body: none
  auth: bearer
}

auth:bearer {
  token: {{ownerAccessToken}}
}

tests {
  test("Status code is 404 for non-existent chatroom", function() {
    expect(res.getStatus()).to.equal(404);
  });
  
  test("Response has not found error message", function() {
    expect(res.getBody().message).to.include("not found");
  });
  
  test("Response time is under 500ms", function() {
    expect(res.getResponseTime()).to.be.lessThan(500);
  });
}

---

meta {
  name: DELETE /api/v1/chatrooms/{id} - Invalid UUID
  type: http
  seq: 109
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/invalid-uuid
  body: none
  auth: bearer
}

auth:bearer {
  token: {{ownerAccessToken}}
}

tests {
  test("Status code is 400 for invalid UUID", function() {
    expect(res.getStatus()).to.equal(400);
  });
  
  test("Response has validation error message", function() {
    expect(res.getBody().message).to.include("Invalid UUID");
  });
  
  test("Response time is under 500ms", function() {
    expect(res.getResponseTime()).to.be.lessThan(500);
  });
}

---

meta {
  name: DELETE /api/v1/chatrooms/{id} - Unauthorized Access (Member)
  type: http
  seq: 110
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/{{chatroomId}}
  body: none
  auth: bearer
}

auth:bearer {
  token: {{memberAccessToken}}
}

tests {
  test("Status code is 403 for member access", function() {
    expect(res.getStatus()).to.equal(403);
  });
  
  test("Response has forbidden error message", function() {
    expect(res.getBody().message).to.include("Forbidden");
  });
  
  test("Response time is under 500ms", function() {
    expect(res.getResponseTime()).to.be.lessThan(500);
  });
}

---

meta {
  name: DELETE /api/v1/chatrooms/{id} - Guest Access (Denied)
  type: http
  seq: 111
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/{{chatroomId}}
  body: none
  auth: bearer
}

auth:bearer {
  token: {{guestAccessToken}}
}

tests {
  test("Status code is 403 for guest access", function() {
    expect(res.getStatus()).to.equal(403);
  });
  
  test("Response has forbidden error message", function() {
    expect(res.getBody().message).to.include("Forbidden");
  });
  
  test("Response time is under 500ms", function() {
    expect(res.getResponseTime()).to.be.lessThan(500);
  });
}

---

meta {
  name: DELETE /api/v1/chatrooms/{id} - Cross-Company Chatroom
  type: http
  seq: 112
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/{{otherCompanyChatroomId}}
  body: none
  auth: bearer
}

auth:bearer {
  token: {{ownerAccessToken}}
}

tests {
  test("Status code is 404 for cross-company chatroom", function() {
    expect(res.getStatus()).to.equal(404);
  });
  
  test("Response has not found error message", function() {
    expect(res.getBody().message).to.include("not found");
  });
  
  test("Response time is under 500ms", function() {
    expect(res.getResponseTime()).to.be.lessThan(500);
  });
}

---

meta {
  name: DELETE /api/v1/chatrooms/{id} - No Token
  type: http
  seq: 113
}

delete {
  url: {{baseUrl}}/api/v1/chatrooms/{{chatroomId}}
  body: none
  auth: none
}

tests {
  test("Status code is 401 for no token", function() {
    expect(res.getStatus()).to.equal(401);
  });
  
  test("Response has unauthorized error message", function() {
    expect(res.getBody().message).to.include("Unauthorized");
  });
  
  test("Response time is under 500ms", function() {
    expect(res.getResponseTime()).to.be.lessThan(500);
  });
}
