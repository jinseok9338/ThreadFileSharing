meta {
  name: POST /api/v1/auth/refresh - Token Validation
  type: http
  seq: 8
}

post {
  url: {{baseUrl}}/api/v1/auth/refresh
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "refreshToken": "{{refreshToken}}"
  }
}

tests {
  test("Status code is 200 for valid refresh token", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response has new access token", function() {
    expect(res.getBody().accessToken).to.be.a('string');
    expect(res.getBody().accessToken).to.have.length.greaterThan(0);
  });
  
  test("New access token is different from original", function() {
    expect(res.getBody().accessToken).to.not.equal("{{accessToken}}");
  });
  
  test("Response time is under 1 second", function() {
    expect(res.getResponseTime()).to.be.lessThan(1000);
  });
}

---

meta {
  name: POST /api/v1/auth/refresh - Invalid Token
  type: http
  seq: 9
}

post {
  url: {{baseUrl}}/api/v1/auth/refresh
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "refreshToken": "invalid-refresh-token"
  }
}

tests {
  test("Status code is 401 for invalid refresh token", function() {
    expect(res.getStatus()).to.equal(401);
  });
  
  test("Response has error message", function() {
    expect(res.getBody().message).to.be.a('string');
    expect(res.getBody().message).to.include("Invalid refresh token");
  });
  
  test("Response time is under 1 second", function() {
    expect(res.getResponseTime()).to.be.lessThan(1000);
  });
}

---

meta {
  name: POST /api/v1/auth/refresh - Expired Token
  type: http
  seq: 10
}

post {
  url: {{baseUrl}}/api/v1/auth/refresh
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "refreshToken": "{{expiredRefreshToken}}"
  }
}

tests {
  test("Status code is 401 for expired refresh token", function() {
    expect(res.getStatus()).to.equal(401);
  });
  
  test("Response has error message", function() {
    expect(res.getBody().message).to.be.a('string');
    expect(res.getBody().message).to.include("Invalid refresh token");
  });
  
  test("Response time is under 1 second", function() {
    expect(res.getResponseTime()).to.be.lessThan(1000);
  });
}
