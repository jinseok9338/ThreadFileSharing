{
  "openapi": "3.0.0",
  "info": {
    "title": "ThreadFileSharing Authentication & Permissions API",
    "description": "API specification for authentication, authorization, company management, and invitations",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local development"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register new user and create company",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "companyName"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "owner@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "Password123!"
                  },
                  "fullName": { "type": "string", "example": "John Doe" },
                  "companyName": {
                    "type": "string",
                    "minLength": 2,
                    "example": "Acme Corp"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User and company created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "400": { "description": "Validation error or email already exists" },
          "429": { "description": "Too many requests" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login with email and password",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "401": { "description": "Invalid credentials" },
          "423": { "description": "Account locked" },
          "429": { "description": "Too many requests" }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh access token using refresh token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "401": { "description": "Invalid or expired refresh token" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout and revoke refresh token",
        "tags": ["Authentication"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Logout successful" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user profile",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "patch": {
        "summary": "Update current user profile",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": { "type": "string" },
                  "username": { "type": "string" },
                  "avatarUrl": { "type": "string", "format": "uri" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/companies/me": {
      "get": {
        "summary": "Get current company information",
        "tags": ["Companies"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Company information",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Company" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/companies/me/members": {
      "get": {
        "summary": "Get company members",
        "tags": ["Companies"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of company members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/invitations": {
      "post": {
        "summary": "Invite new member to company",
        "tags": ["Invitations"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "role"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "role": { "type": "string", "enum": ["admin", "member"] }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invitation created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Invitation" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden - requires admin or owner role" }
        }
      },
      "get": {
        "summary": "List company invitations",
        "tags": ["Invitations"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of invitations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Invitation" }
                }
              }
            }
          }
        }
      }
    },
    "/invitations/accept/{token}": {
      "post": {
        "summary": "Accept invitation and create account",
        "tags": ["Invitations"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "fullName"],
                "properties": {
                  "password": { "type": "string", "minLength": 8 },
                  "fullName": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created and logged in",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "400": { "description": "Invalid or expired token" },
          "404": { "description": "Invitation not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": { "type": "string" },
          "refreshToken": { "type": "string" },
          "expiresIn": { "type": "number", "example": 900 },
          "user": { "$ref": "#/components/schemas/User" },
          "company": { "$ref": "#/components/schemas/Company" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "email": { "type": "string", "format": "email" },
          "username": { "type": "string" },
          "fullName": { "type": "string" },
          "avatarUrl": { "type": "string", "format": "uri" },
          "companyRole": {
            "type": "string",
            "enum": ["owner", "admin", "member"]
          },
          "emailVerified": { "type": "boolean" },
          "isActive": { "type": "boolean" },
          "lastLoginAt": { "type": "string", "format": "date-time" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "plan": { "type": "string", "enum": ["free", "pro", "enterprise"] },
          "maxUsers": { "type": "number" },
          "maxStorageBytes": { "type": "number" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Invitation": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "email": { "type": "string", "format": "email" },
          "role": { "type": "string", "enum": ["admin", "member"] },
          "status": {
            "type": "string",
            "enum": ["pending", "accepted", "expired", "cancelled"]
          },
          "expiresAt": { "type": "string", "format": "date-time" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}
