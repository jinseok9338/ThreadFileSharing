openapi: 3.0.3
info:
  title: Message Management API
  description: API for real-time messaging, message history, and message operations
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1
    description: Development server

paths:
  /chatrooms/{chatroomId}/messages:
    get:
      summary: Get messages from chatroom
      tags: [Messages]
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: lastIndex
          in: query
          schema:
            type: string
        - name: threadId
          in: query
          schema:
            type: string
            format: uuid
          description: Filter messages by thread
      responses:
        "200":
          description: List of messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageListResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

    post:
      summary: Send message to chatroom
      tags: [Messages]
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendMessageRequest"
      responses:
        "201":
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /messages/{messageId}:
    get:
      summary: Get message details
      tags: [Messages]
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Message details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

    put:
      summary: Edit message
      tags: [Messages]
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditMessageRequest"
      responses:
        "200":
          description: Message edited successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

    delete:
      summary: Delete message
      tags: [Messages]
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Message deleted successfully
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /messages/{messageId}/reactions:
    post:
      summary: Add reaction to message
      tags: [Message Reactions]
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddReactionRequest"
      responses:
        "201":
          description: Reaction added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageReactionResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

  /messages/{messageId}/reactions/{reactionId}:
    delete:
      summary: Remove reaction from message
      tags: [Message Reactions]
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: reactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Reaction removed successfully
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        type:
          type: string
          enum: [text, file, system, thread_created, member_joined, member_left]
        metadata:
          type: object
          nullable: true
        senderId:
          type: string
          format: uuid
        sender:
          $ref: "#/components/schemas/User"
        chatroomId:
          type: string
          format: uuid
        threadId:
          type: string
          format: uuid
          nullable: true
        reactions:
          type: array
          items:
            $ref: "#/components/schemas/MessageReaction"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/MessageAttachment"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        editedAt:
          type: string
          format: date-time
          nullable: true

    MessageReaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        emoji:
          type: string
        userId:
          type: string
          format: uuid
        user:
          $ref: "#/components/schemas/User"
        createdAt:
          type: string
          format: date-time

    MessageAttachment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fileName:
          type: string
        fileSize:
          type: integer
        mimeType:
          type: string
        downloadUrl:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        fullName:
          type: string
        avatar:
          type: string
          nullable: true

    SendMessageRequest:
      type: object
      required: [content]
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 4000
        type:
          type: string
          enum: [text, file, system]
          default: text
        threadId:
          type: string
          format: uuid
          nullable: true
        metadata:
          type: object
          nullable: true

    EditMessageRequest:
      type: object
      required: [content]
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 4000
        metadata:
          type: object
          nullable: true

    AddReactionRequest:
      type: object
      required: [emoji]
      properties:
        emoji:
          type: string
          pattern: '^[\p{Emoji}]$'

    MessageResponse:
      allOf:
        - $ref: "#/components/schemas/Message"

    MessageListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        pagination:
          $ref: "#/components/schemas/CursorPagination"

    MessageReactionResponse:
      allOf:
        - $ref: "#/components/schemas/MessageReaction"

    CursorPagination:
      type: object
      properties:
        hasNext:
          type: boolean
        nextIndex:
          type: string
          nullable: true
        limit:
          type: integer

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        statusCode:
          type: integer
        timestamp:
          type: string
          format: date-time

  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    NotFoundError:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
