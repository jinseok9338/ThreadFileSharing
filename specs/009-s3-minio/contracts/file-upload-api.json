{
  "openapi": "3.0.0",
  "info": {
    "title": "ThreadFileSharing - File Upload API",
    "version": "1.0.0",
    "description": "S3/MinIO file upload system with progress tracking and real-time updates"
  },
  "servers": [
    {
      "url": "http://localhost:3001/api/v1",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/files/upload": {
      "post": {
        "summary": "Upload single or multiple files",
        "description": "Upload files to S3/MinIO storage with progress tracking",
        "operationId": "uploadFiles",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Files to upload"
                  },
                  "chatroomId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Chatroom ID for file association"
                  },
                  "threadId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Thread ID for file association"
                  },
                  "sessionName": {
                    "type": "string",
                    "description": "Optional name for upload session"
                  }
                },
                "required": ["files"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Upload initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInitiatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid file or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "413": {
            "description": "File too large or exceeds storage quota",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/files/{fileId}": {
      "get": {
        "summary": "Get file metadata",
        "description": "Retrieve file metadata and download information",
        "operationId": "getFileMetadata",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File metadata retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMetadataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete file",
        "description": "Delete file from storage and database",
        "operationId": "deleteFile",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "File deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/files/{fileId}/download": {
      "get": {
        "summary": "Get secure download URL",
        "description": "Generate secure, time-limited download URL for file",
        "operationId": "getDownloadUrl",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expiresIn",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 3600,
              "description": "URL expiration time in seconds (default: 1 hour)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Download URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadUrlResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "summary": "List files",
        "description": "List files with filtering and pagination",
        "operationId": "listFiles",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "chatroomId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by chatroom ID"
          },
          {
            "name": "threadId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by thread ID"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100
            },
            "description": "Number of files to return"
          },
          {
            "name": "lastIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search in file names"
          },
          {
            "name": "mimeType",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by MIME type"
          }
        ],
        "responses": {
          "200": {
            "description": "Files listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/upload-progress/{sessionId}": {
      "get": {
        "summary": "Get upload progress",
        "description": "Get real-time upload progress for session",
        "operationId": "getUploadProgress",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upload progress retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadProgressResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Upload session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/storage/quota": {
      "get": {
        "summary": "Get storage quota",
        "description": "Get company storage quota and usage information",
        "operationId": "getStorageQuota",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Storage quota retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageQuotaResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UploadInitiatedResponse": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "type": "object",
            "required": ["sessionId", "files"],
            "properties": {
              "sessionId": {
                "type": "string",
                "format": "uuid"
              },
              "files": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileUploadInfo"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FileUploadInfo": {
        "type": "object",
        "required": ["fileId", "originalName", "size", "status"],
        "properties": {
          "fileId": {
            "type": "string",
            "format": "uuid"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "mimeType": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "UPLOADING", "COMPLETED", "FAILED"]
          }
        }
      },
      "FileMetadataResponse": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "$ref": "#/components/schemas/FileMetadata"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FileMetadata": {
        "type": "object",
        "required": ["id", "originalName", "size", "mimeType", "createdAt"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "originalName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "hash": {
            "type": "string"
          },
          "isProcessed": {
            "type": "boolean"
          },
          "processingStatus": {
            "type": "string",
            "enum": ["PENDING", "PROCESSING", "COMPLETED", "FAILED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DownloadUrlResponse": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "type": "object",
            "required": ["downloadUrl", "expiresAt"],
            "properties": {
              "downloadUrl": {
                "type": "string",
                "format": "uri"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              },
              "filename": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FileListResponse": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "type": "object",
            "required": ["items", "pagination"],
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileMetadata"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/CursorPagination"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UploadProgressResponse": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "type": "object",
            "required": ["sessionId", "status", "files"],
            "properties": {
              "sessionId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": ["ACTIVE", "COMPLETED", "FAILED", "CANCELLED"]
              },
              "totalFiles": {
                "type": "integer"
              },
              "completedFiles": {
                "type": "integer"
              },
              "failedFiles": {
                "type": "integer"
              },
              "totalSize": {
                "type": "integer"
              },
              "uploadedSize": {
                "type": "integer"
              },
              "files": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileProgress"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FileProgress": {
        "type": "object",
        "required": ["fileId", "status", "progressPercentage"],
        "properties": {
          "fileId": {
            "type": "string",
            "format": "uuid"
          },
          "originalName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "UPLOADING", "COMPLETED", "FAILED", "CANCELLED"]
          },
          "progressPercentage": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "bytesUploaded": {
            "type": "integer"
          },
          "totalBytes": {
            "type": "integer"
          },
          "uploadSpeed": {
            "type": "integer"
          },
          "estimatedTimeRemaining": {
            "type": "integer"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "StorageQuotaResponse": {
        "type": "object",
        "required": ["status", "data"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "type": "object",
            "required": ["storageLimitBytes", "storageUsedBytes", "fileCount"],
            "properties": {
              "storageLimitBytes": {
                "type": "integer"
              },
              "storageUsedBytes": {
                "type": "integer"
              },
              "storageAvailableBytes": {
                "type": "integer"
              },
              "fileCount": {
                "type": "integer"
              },
              "usagePercentage": {
                "type": "number",
                "format": "float"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CursorPagination": {
        "type": "object",
        "required": ["limit", "hasNext", "nextIndex"],
        "properties": {
          "limit": {
            "type": "integer"
          },
          "hasNext": {
            "type": "boolean"
          },
          "nextIndex": {
            "type": "integer"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["status", "error"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["error"]
          },
          "error": {
            "type": "object",
            "required": ["code", "message"],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "path": {
            "type": "string"
          }
        }
      }
    }
  }
}
